//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GestionInventarioElectroMobile.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ELECTROMOBILEModel : DbContext
    {
        public ELECTROMOBILEModel()
            : base("name=ELECTROMOBILEModel")
        {
        }

        public ELECTROMOBILEModel(string connectionString)
            : base("name=ELECTROMOBILEModel")
        {
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Compra> Compra { get; set; }
        public virtual DbSet<Detalle_compra> Detalle_compra { get; set; }
        public virtual DbSet<DetalleDevCompra> DetalleDevCompra { get; set; }
        public virtual DbSet<DetalleReparacion> DetalleReparacion { get; set; }
        public virtual DbSet<DevolucionCompra> DevolucionCompra { get; set; }
        public virtual DbSet<DevolucionVenta> DevolucionVenta { get; set; }
        public virtual DbSet<Estado_uso> Estado_uso { get; set; }
        public virtual DbSet<Lester_pieza> Lester_pieza { get; set; }
        public virtual DbSet<Pieza> Pieza { get; set; }
        public virtual DbSet<Proveedor> Proveedor { get; set; }
        public virtual DbSet<Reparacion> Reparacion { get; set; }
        public virtual DbSet<Sustituto_piezas> Sustituto_piezas { get; set; }
        public virtual DbSet<Tipo_piezas> Tipo_piezas { get; set; }
        public virtual DbSet<Tipo_proveedor> Tipo_proveedor { get; set; }
        public virtual DbSet<Vehiculo> Vehiculo { get; set; }
        public virtual DbSet<Venta> Venta { get; set; }
        public virtual DbSet<Detalle_venta> Detalle_venta { get; set; }
        public virtual DbSet<DetalleDevVenta> DetalleDevVenta { get; set; }
        public virtual DbSet<ReportesVentasPorCliente> ReportesVentasPorCliente { get; set; }
        public virtual DbSet<ReportesVentasPorPiezas> ReportesVentasPorPiezas { get; set; }
        public virtual DbSet<ReporteVentasPorPieza> ReporteVentasPorPieza { get; set; }
        public virtual DbSet<InformacionProveedores> InformacionProveedores { get; set; }
        public virtual DbSet<InformacionDeVentas> InformacionDeVentas { get; set; }
        public virtual DbSet<InformacionDePedidos> InformacionDePedidos { get; set; }
    
        public virtual ObjectResult<AgregarDetalleCompra_Result> AgregarDetalleCompra(string iC, string iP, Nullable<decimal> pC, Nullable<int> can)
        {
            var iCParameter = iC != null ?
                new ObjectParameter("IC", iC) :
                new ObjectParameter("IC", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var pCParameter = pC.HasValue ?
                new ObjectParameter("PC", pC) :
                new ObjectParameter("PC", typeof(decimal));
    
            var canParameter = can.HasValue ?
                new ObjectParameter("Can", can) :
                new ObjectParameter("Can", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AgregarDetalleCompra_Result>("AgregarDetalleCompra", iCParameter, iPParameter, pCParameter, canParameter);
        }
    
        public virtual int AgregarDetalleVenta(Nullable<int> iD_Venta, string iD_Pieza, Nullable<int> cantidad)
        {
            var iD_VentaParameter = iD_Venta.HasValue ?
                new ObjectParameter("ID_Venta", iD_Venta) :
                new ObjectParameter("ID_Venta", typeof(int));
    
            var iD_PiezaParameter = iD_Pieza != null ?
                new ObjectParameter("ID_Pieza", iD_Pieza) :
                new ObjectParameter("ID_Pieza", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarDetalleVenta", iD_VentaParameter, iD_PiezaParameter, cantidadParameter);
        }
    
        public virtual ObjectResult<BuscarCliente_Result> BuscarCliente(string valor)
        {
            var valorParameter = valor != null ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarCliente_Result>("BuscarCliente", valorParameter);
        }


        public virtual ObjectResult<BuscarCompra_Result> BuscarCompra(string iC)
        {
            var iCParameter = iC != null ?
                new ObjectParameter("IC", iC) :
                new ObjectParameter("IC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarCompra_Result>("BuscarCompra", iCParameter);
        }
    
        public virtual ObjectResult<BuscarDetalle_venta_Result> BuscarDetalle_venta(Nullable<int> iVB, string iPB)
        {
            var iVBParameter = iVB.HasValue ?
                new ObjectParameter("IVB", iVB) :
                new ObjectParameter("IVB", typeof(int));
    
            var iPBParameter = iPB != null ?
                new ObjectParameter("IPB", iPB) :
                new ObjectParameter("IPB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarDetalle_venta_Result>("BuscarDetalle_venta", iVBParameter, iPBParameter);
        }
    
        public virtual ObjectResult<BuscarReparacion_Result> BuscarReparacion(Nullable<int> iDR)
        {
            var iDRParameter = iDR.HasValue ?
                new ObjectParameter("IDR", iDR) :
                new ObjectParameter("IDR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarReparacion_Result>("BuscarReparacion", iDRParameter);
        }
    
        public virtual ObjectResult<BuscarVenta_Result> BuscarVenta(Nullable<int> iD_Venta)
        {
            var iD_VentaParameter = iD_Venta.HasValue ?
                new ObjectParameter("ID_Venta", iD_Venta) :
                new ObjectParameter("ID_Venta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarVenta_Result>("BuscarVenta", iD_VentaParameter);
        }
    
        public virtual ObjectResult<CrearCompra_Result> CrearCompra(string iC, string iP, Nullable<System.DateTime> fecha)
        {
            var iCParameter = iC != null ?
                new ObjectParameter("IC", iC) :
                new ObjectParameter("IC", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CrearCompra_Result>("CrearCompra", iCParameter, iPParameter, fechaParameter);
        }
    
        public virtual int EditarCliente(string rUC, string pn, string sn, string pa, string sa, string corC, string telC, string tipoEmp, string tipoSer, string dirC, string eMP)
        {
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            var pnParameter = pn != null ?
                new ObjectParameter("Pn", pn) :
                new ObjectParameter("Pn", typeof(string));
    
            var snParameter = sn != null ?
                new ObjectParameter("Sn", sn) :
                new ObjectParameter("Sn", typeof(string));
    
            var paParameter = pa != null ?
                new ObjectParameter("Pa", pa) :
                new ObjectParameter("Pa", typeof(string));
    
            var saParameter = sa != null ?
                new ObjectParameter("Sa", sa) :
                new ObjectParameter("Sa", typeof(string));
    
            var corCParameter = corC != null ?
                new ObjectParameter("CorC", corC) :
                new ObjectParameter("CorC", typeof(string));
    
            var telCParameter = telC != null ?
                new ObjectParameter("TelC", telC) :
                new ObjectParameter("TelC", typeof(string));
    
            var tipoEmpParameter = tipoEmp != null ?
                new ObjectParameter("TipoEmp", tipoEmp) :
                new ObjectParameter("TipoEmp", typeof(string));
    
            var tipoSerParameter = tipoSer != null ?
                new ObjectParameter("TipoSer", tipoSer) :
                new ObjectParameter("TipoSer", typeof(string));
    
            var dirCParameter = dirC != null ?
                new ObjectParameter("DirC", dirC) :
                new ObjectParameter("DirC", typeof(string));
    
            var eMPParameter = eMP != null ?
                new ObjectParameter("EMP", eMP) :
                new ObjectParameter("EMP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditarCliente", rUCParameter, pnParameter, snParameter, paParameter, saParameter, corCParameter, telCParameter, tipoEmpParameter, tipoSerParameter, dirCParameter, eMPParameter);
        }
    
        public virtual ObjectResult<EditarDetalle_venta_Result> EditarDetalle_venta(Nullable<int> iVB, string iPB, Nullable<int> cant)
        {
            var iVBParameter = iVB.HasValue ?
                new ObjectParameter("IVB", iVB) :
                new ObjectParameter("IVB", typeof(int));
    
            var iPBParameter = iPB != null ?
                new ObjectParameter("IPB", iPB) :
                new ObjectParameter("IPB", typeof(string));
    
            var cantParameter = cant.HasValue ?
                new ObjectParameter("cant", cant) :
                new ObjectParameter("cant", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EditarDetalle_venta_Result>("EditarDetalle_venta", iVBParameter, iPBParameter, cantParameter);
        }
    
        public virtual ObjectResult<EditarDetalleCompra_Result> EditarDetalleCompra(string iCB, string iPB, Nullable<decimal> pC, Nullable<int> can)
        {
            var iCBParameter = iCB != null ?
                new ObjectParameter("ICB", iCB) :
                new ObjectParameter("ICB", typeof(string));
    
            var iPBParameter = iPB != null ?
                new ObjectParameter("IPB", iPB) :
                new ObjectParameter("IPB", typeof(string));
    
            var pCParameter = pC.HasValue ?
                new ObjectParameter("PC", pC) :
                new ObjectParameter("PC", typeof(decimal));
    
            var canParameter = can.HasValue ?
                new ObjectParameter("Can", can) :
                new ObjectParameter("Can", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EditarDetalleCompra_Result>("EditarDetalleCompra", iCBParameter, iPBParameter, pCParameter, canParameter);
        }
    
        public virtual ObjectResult<EditarDetalleDevCompra_Result> EditarDetalleDevCompra(Nullable<int> iD_DevCompra, string iDP, Nullable<int> cant_Edit)
        {
            var iD_DevCompraParameter = iD_DevCompra.HasValue ?
                new ObjectParameter("ID_DevCompra", iD_DevCompra) :
                new ObjectParameter("ID_DevCompra", typeof(int));
    
            var iDPParameter = iDP != null ?
                new ObjectParameter("IDP", iDP) :
                new ObjectParameter("IDP", typeof(string));
    
            var cant_EditParameter = cant_Edit.HasValue ?
                new ObjectParameter("cant_Edit", cant_Edit) :
                new ObjectParameter("cant_Edit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EditarDetalleDevCompra_Result>("EditarDetalleDevCompra", iD_DevCompraParameter, iDPParameter, cant_EditParameter);
        }
    
        public virtual ObjectResult<EditarDetalleDevVenta_Result> EditarDetalleDevVenta(Nullable<int> iD_DevVenta, string iDP, Nullable<int> cant_Edit)
        {
            var iD_DevVentaParameter = iD_DevVenta.HasValue ?
                new ObjectParameter("ID_DevVenta", iD_DevVenta) :
                new ObjectParameter("ID_DevVenta", typeof(int));
    
            var iDPParameter = iDP != null ?
                new ObjectParameter("IDP", iDP) :
                new ObjectParameter("IDP", typeof(string));
    
            var cant_EditParameter = cant_Edit.HasValue ?
                new ObjectParameter("cant_Edit", cant_Edit) :
                new ObjectParameter("cant_Edit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EditarDetalleDevVenta_Result>("EditarDetalleDevVenta", iD_DevVentaParameter, iDPParameter, cant_EditParameter);
        }
    
        public virtual int EditarDetalleReparacion(Nullable<int> iR, string iP, Nullable<decimal> pR, Nullable<int> canR)
        {
            var iRParameter = iR.HasValue ?
                new ObjectParameter("IR", iR) :
                new ObjectParameter("IR", typeof(int));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var pRParameter = pR.HasValue ?
                new ObjectParameter("PR", pR) :
                new ObjectParameter("PR", typeof(decimal));
    
            var canRParameter = canR.HasValue ?
                new ObjectParameter("CanR", canR) :
                new ObjectParameter("CanR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditarDetalleReparacion", iRParameter, iPParameter, pRParameter, canRParameter);
        }
    
        public virtual int EditarDevolucionDeCompra(Nullable<int> iDV, string desc)
        {
            var iDVParameter = iDV.HasValue ?
                new ObjectParameter("IDV", iDV) :
                new ObjectParameter("IDV", typeof(int));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditarDevolucionDeCompra", iDVParameter, descParameter);
        }
    
        public virtual int EditarDevVenta(Nullable<int> iDV, string desc)
        {
            var iDVParameter = iDV.HasValue ?
                new ObjectParameter("IDV", iDV) :
                new ObjectParameter("IDV", typeof(int));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditarDevVenta", iDVParameter, descParameter);
        }
    
        public virtual int EditarPieza(string iP, string iPrin, string iCir, string iCor, string est, Nullable<byte> ten, Nullable<decimal> pre, Nullable<int> cant, string cir, Nullable<byte> di, Nullable<byte> recTer, string volt)
        {
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var iPrinParameter = iPrin != null ?
                new ObjectParameter("IPrin", iPrin) :
                new ObjectParameter("IPrin", typeof(string));
    
            var iCirParameter = iCir != null ?
                new ObjectParameter("ICir", iCir) :
                new ObjectParameter("ICir", typeof(string));
    
            var iCorParameter = iCor != null ?
                new ObjectParameter("ICor", iCor) :
                new ObjectParameter("ICor", typeof(string));
    
            var estParameter = est != null ?
                new ObjectParameter("Est", est) :
                new ObjectParameter("Est", typeof(string));
    
            var tenParameter = ten.HasValue ?
                new ObjectParameter("Ten", ten) :
                new ObjectParameter("Ten", typeof(byte));
    
            var preParameter = pre.HasValue ?
                new ObjectParameter("Pre", pre) :
                new ObjectParameter("Pre", typeof(decimal));
    
            var cantParameter = cant.HasValue ?
                new ObjectParameter("Cant", cant) :
                new ObjectParameter("Cant", typeof(int));
    
            var cirParameter = cir != null ?
                new ObjectParameter("Cir", cir) :
                new ObjectParameter("Cir", typeof(string));
    
            var diParameter = di.HasValue ?
                new ObjectParameter("Di", di) :
                new ObjectParameter("Di", typeof(byte));
    
            var recTerParameter = recTer.HasValue ?
                new ObjectParameter("RecTer", recTer) :
                new ObjectParameter("RecTer", typeof(byte));
    
            var voltParameter = volt != null ?
                new ObjectParameter("Volt", volt) :
                new ObjectParameter("Volt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditarPieza", iPParameter, iPrinParameter, iCirParameter, iCorParameter, estParameter, tenParameter, preParameter, cantParameter, cirParameter, diParameter, recTerParameter, voltParameter);
        }
    
        public virtual int EditarProveedor(string iP, string np, string ap, string emp, string cor, string tel, string dir)
        {
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var npParameter = np != null ?
                new ObjectParameter("Np", np) :
                new ObjectParameter("Np", typeof(string));
    
            var apParameter = ap != null ?
                new ObjectParameter("Ap", ap) :
                new ObjectParameter("Ap", typeof(string));
    
            var empParameter = emp != null ?
                new ObjectParameter("Emp", emp) :
                new ObjectParameter("Emp", typeof(string));
    
            var corParameter = cor != null ?
                new ObjectParameter("Cor", cor) :
                new ObjectParameter("Cor", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var dirParameter = dir != null ?
                new ObjectParameter("Dir", dir) :
                new ObjectParameter("Dir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditarProveedor", iPParameter, npParameter, apParameter, empParameter, corParameter, telParameter, dirParameter);
        }
    
        public virtual ObjectResult<EditarReparacion_Result> EditarReparacion(Nullable<int> iDR, string iDC, Nullable<System.DateTime> fECHAFIN)
        {
            var iDRParameter = iDR.HasValue ?
                new ObjectParameter("IDR", iDR) :
                new ObjectParameter("IDR", typeof(int));
    
            var iDCParameter = iDC != null ?
                new ObjectParameter("IDC", iDC) :
                new ObjectParameter("IDC", typeof(string));
    
            var fECHAFINParameter = fECHAFIN.HasValue ?
                new ObjectParameter("FECHAFIN", fECHAFIN) :
                new ObjectParameter("FECHAFIN", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EditarReparacion_Result>("EditarReparacion", iDRParameter, iDCParameter, fECHAFINParameter);
        }
    
        public virtual ObjectResult<EditarSustitutoPieza_Result> EditarSustitutoPieza(string iDPB, string iDS, string iDSEdit)
        {
            var iDPBParameter = iDPB != null ?
                new ObjectParameter("IDPB", iDPB) :
                new ObjectParameter("IDPB", typeof(string));
    
            var iDSParameter = iDS != null ?
                new ObjectParameter("IDS", iDS) :
                new ObjectParameter("IDS", typeof(string));
    
            var iDSEditParameter = iDSEdit != null ?
                new ObjectParameter("IDSEdit", iDSEdit) :
                new ObjectParameter("IDSEdit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EditarSustitutoPieza_Result>("EditarSustitutoPieza", iDPBParameter, iDSParameter, iDSEditParameter);
        }
    
        public virtual ObjectResult<EditarVehiculo_Result> EditarVehiculo(Nullable<int> iDVB, string nombEdit, string aniosEdit)
        {
            var iDVBParameter = iDVB.HasValue ?
                new ObjectParameter("IDVB", iDVB) :
                new ObjectParameter("IDVB", typeof(int));
    
            var nombEditParameter = nombEdit != null ?
                new ObjectParameter("NombEdit", nombEdit) :
                new ObjectParameter("NombEdit", typeof(string));
    
            var aniosEditParameter = aniosEdit != null ?
                new ObjectParameter("AniosEdit", aniosEdit) :
                new ObjectParameter("AniosEdit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EditarVehiculo_Result>("EditarVehiculo", iDVBParameter, nombEditParameter, aniosEditParameter);
        }
    
        public virtual int EditarVenta(Nullable<int> iD_Venta, string rUC, Nullable<System.DateTime> fechaEntrega, string estado)
        {
            var iD_VentaParameter = iD_Venta.HasValue ?
                new ObjectParameter("ID_Venta", iD_Venta) :
                new ObjectParameter("ID_Venta", typeof(int));
    
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            var fechaEntregaParameter = fechaEntrega.HasValue ?
                new ObjectParameter("FechaEntrega", fechaEntrega) :
                new ObjectParameter("FechaEntrega", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditarVenta", iD_VentaParameter, rUCParameter, fechaEntregaParameter, estadoParameter);
        }
    
        public virtual int EliminarCliente(string rUC)
        {
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarCliente", rUCParameter);
        }
    
        public virtual int EliminarDetalle_venta(Nullable<int> iV, string iP)
        {
            var iVParameter = iV.HasValue ?
                new ObjectParameter("IV", iV) :
                new ObjectParameter("IV", typeof(int));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarDetalle_venta", iVParameter, iPParameter);
        }
    
        public virtual int EliminarDetalleDeCompra(string iC, string iP)
        {
            var iCParameter = iC != null ?
                new ObjectParameter("IC", iC) :
                new ObjectParameter("IC", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarDetalleDeCompra", iCParameter, iPParameter);
        }
    
        public virtual int EliminarDetDevCompra(Nullable<int> iD_DevCompra, string iDP)
        {
            var iD_DevCompraParameter = iD_DevCompra.HasValue ?
                new ObjectParameter("ID_DevCompra", iD_DevCompra) :
                new ObjectParameter("ID_DevCompra", typeof(int));
    
            var iDPParameter = iDP != null ?
                new ObjectParameter("IDP", iDP) :
                new ObjectParameter("IDP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarDetDevCompra", iD_DevCompraParameter, iDPParameter);
        }
    
        public virtual int EliminarPieza(string idPi)
        {
            var idPiParameter = idPi != null ?
                new ObjectParameter("IdPi", idPi) :
                new ObjectParameter("IdPi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarPieza", idPiParameter);
        }
    
        public virtual int EliminarPiezaEnVehiculo(Nullable<int> iV, string iP)
        {
            var iVParameter = iV.HasValue ?
                new ObjectParameter("IV", iV) :
                new ObjectParameter("IV", typeof(int));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarPiezaEnVehiculo", iVParameter, iPParameter);
        }
    
        public virtual int EliminarProveedor(string iP)
        {
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarProveedor", iPParameter);
        }
    
        public virtual int EliminarSustitutoPieza(string iDPB, string iDSB)
        {
            var iDPBParameter = iDPB != null ?
                new ObjectParameter("IDPB", iDPB) :
                new ObjectParameter("IDPB", typeof(string));
    
            var iDSBParameter = iDSB != null ?
                new ObjectParameter("IDSB", iDSB) :
                new ObjectParameter("IDSB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarSustitutoPieza", iDPBParameter, iDSBParameter);
        }
    
        public virtual int InsertarCliente(string rUC, string pn, string sn, string pa, string sa, string corC, string telC, string tipoEmp, string tipoSer, string dirC, string emp)
        {
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            var pnParameter = pn != null ?
                new ObjectParameter("Pn", pn) :
                new ObjectParameter("Pn", typeof(string));
    
            var snParameter = sn != null ?
                new ObjectParameter("Sn", sn) :
                new ObjectParameter("Sn", typeof(string));
    
            var paParameter = pa != null ?
                new ObjectParameter("Pa", pa) :
                new ObjectParameter("Pa", typeof(string));
    
            var saParameter = sa != null ?
                new ObjectParameter("Sa", sa) :
                new ObjectParameter("Sa", typeof(string));
    
            var corCParameter = corC != null ?
                new ObjectParameter("CorC", corC) :
                new ObjectParameter("CorC", typeof(string));
    
            var telCParameter = telC != null ?
                new ObjectParameter("TelC", telC) :
                new ObjectParameter("TelC", typeof(string));
    
            var tipoEmpParameter = tipoEmp != null ?
                new ObjectParameter("TipoEmp", tipoEmp) :
                new ObjectParameter("TipoEmp", typeof(string));
    
            var tipoSerParameter = tipoSer != null ?
                new ObjectParameter("TipoSer", tipoSer) :
                new ObjectParameter("TipoSer", typeof(string));
    
            var dirCParameter = dirC != null ?
                new ObjectParameter("DirC", dirC) :
                new ObjectParameter("DirC", typeof(string));
    
            var empParameter = emp != null ?
                new ObjectParameter("Emp", emp) :
                new ObjectParameter("Emp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarCliente", rUCParameter, pnParameter, snParameter, paParameter, saParameter, corCParameter, telCParameter, tipoEmpParameter, tipoSerParameter, dirCParameter, empParameter);
        }
    
        public virtual ObjectResult<InsertarDetalleDevCompra_Result> InsertarDetalleDevCompra(Nullable<int> iDC, string iP, Nullable<int> can)
        {
            var iDCParameter = iDC.HasValue ?
                new ObjectParameter("IDC", iDC) :
                new ObjectParameter("IDC", typeof(int));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var canParameter = can.HasValue ?
                new ObjectParameter("Can", can) :
                new ObjectParameter("Can", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertarDetalleDevCompra_Result>("InsertarDetalleDevCompra", iDCParameter, iPParameter, canParameter);
        }
    
        public virtual ObjectResult<InsertarDetalleDevVenta_Result> InsertarDetalleDevVenta(Nullable<int> iDV, string iP, Nullable<int> can)
        {
            var iDVParameter = iDV.HasValue ?
                new ObjectParameter("IDV", iDV) :
                new ObjectParameter("IDV", typeof(int));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var canParameter = can.HasValue ?
                new ObjectParameter("Can", can) :
                new ObjectParameter("Can", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertarDetalleDevVenta_Result>("InsertarDetalleDevVenta", iDVParameter, iPParameter, canParameter);
        }
    
        public virtual ObjectResult<InsertarDetalleReparacion_Result> InsertarDetalleReparacion(Nullable<int> iR, string iP, Nullable<decimal> pR, Nullable<int> canR)
        {
            var iRParameter = iR.HasValue ?
                new ObjectParameter("IR", iR) :
                new ObjectParameter("IR", typeof(int));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var pRParameter = pR.HasValue ?
                new ObjectParameter("PR", pR) :
                new ObjectParameter("PR", typeof(decimal));
    
            var canRParameter = canR.HasValue ?
                new ObjectParameter("CanR", canR) :
                new ObjectParameter("CanR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertarDetalleReparacion_Result>("InsertarDetalleReparacion", iRParameter, iPParameter, pRParameter, canRParameter);
        }
    
        public virtual int InsertarDevolucionCompra(string iC, string desc)
        {
            var iCParameter = iC != null ?
                new ObjectParameter("IC", iC) :
                new ObjectParameter("IC", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarDevolucionCompra", iCParameter, descParameter);
        }
    
        public virtual int InsertarDevVenta(Nullable<int> iDV, string dESC, Nullable<System.DateTime> fECHADEV, Nullable<decimal> total)
        {
            var iDVParameter = iDV.HasValue ?
                new ObjectParameter("IDV", iDV) :
                new ObjectParameter("IDV", typeof(int));
    
            var dESCParameter = dESC != null ?
                new ObjectParameter("DESC", dESC) :
                new ObjectParameter("DESC", typeof(string));
    
            var fECHADEVParameter = fECHADEV.HasValue ?
                new ObjectParameter("FECHADEV", fECHADEV) :
                new ObjectParameter("FECHADEV", typeof(System.DateTime));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarDevVenta", iDVParameter, dESCParameter, fECHADEVParameter, totalParameter);
        }
    
        public virtual ObjectResult<InsertarLester_Result> InsertarLester(string iP, string iL)
        {
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var iLParameter = iL != null ?
                new ObjectParameter("IL", iL) :
                new ObjectParameter("IL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertarLester_Result>("InsertarLester", iPParameter, iLParameter);
        }
    
        public virtual ObjectResult<InsertarPieza_Result> InsertarPieza(string iP, string iProv, Nullable<byte> iE, Nullable<byte> iTipo, string iPrin, string iCir, string iCor, string est, Nullable<byte> ten, Nullable<decimal> pre, string cir, Nullable<byte> di, Nullable<byte> recTer, string volt, string fab)
        {
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var iProvParameter = iProv != null ?
                new ObjectParameter("IProv", iProv) :
                new ObjectParameter("IProv", typeof(string));
    
            var iEParameter = iE.HasValue ?
                new ObjectParameter("IE", iE) :
                new ObjectParameter("IE", typeof(byte));
    
            var iTipoParameter = iTipo.HasValue ?
                new ObjectParameter("ITipo", iTipo) :
                new ObjectParameter("ITipo", typeof(byte));
    
            var iPrinParameter = iPrin != null ?
                new ObjectParameter("IPrin", iPrin) :
                new ObjectParameter("IPrin", typeof(string));
    
            var iCirParameter = iCir != null ?
                new ObjectParameter("ICir", iCir) :
                new ObjectParameter("ICir", typeof(string));
    
            var iCorParameter = iCor != null ?
                new ObjectParameter("ICor", iCor) :
                new ObjectParameter("ICor", typeof(string));
    
            var estParameter = est != null ?
                new ObjectParameter("Est", est) :
                new ObjectParameter("Est", typeof(string));
    
            var tenParameter = ten.HasValue ?
                new ObjectParameter("Ten", ten) :
                new ObjectParameter("Ten", typeof(byte));
    
            var preParameter = pre.HasValue ?
                new ObjectParameter("Pre", pre) :
                new ObjectParameter("Pre", typeof(decimal));
    
            var cirParameter = cir != null ?
                new ObjectParameter("Cir", cir) :
                new ObjectParameter("Cir", typeof(string));
    
            var diParameter = di.HasValue ?
                new ObjectParameter("Di", di) :
                new ObjectParameter("Di", typeof(byte));
    
            var recTerParameter = recTer.HasValue ?
                new ObjectParameter("RecTer", recTer) :
                new ObjectParameter("RecTer", typeof(byte));
    
            var voltParameter = volt != null ?
                new ObjectParameter("Volt", volt) :
                new ObjectParameter("Volt", typeof(string));
    
            var fabParameter = fab != null ?
                new ObjectParameter("Fab", fab) :
                new ObjectParameter("Fab", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertarPieza_Result>("InsertarPieza", iPParameter, iProvParameter, iEParameter, iTipoParameter, iPrinParameter, iCirParameter, iCorParameter, estParameter, tenParameter, preParameter, cirParameter, diParameter, recTerParameter, voltParameter, fabParameter);
        }
    
        public virtual ObjectResult<InsertarPiezaVehiculo_Result> InsertarPiezaVehiculo(string iP, Nullable<int> iV)
        {
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var iVParameter = iV.HasValue ?
                new ObjectParameter("IV", iV) :
                new ObjectParameter("IV", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertarPiezaVehiculo_Result>("InsertarPiezaVehiculo", iPParameter, iVParameter);
        }
    
        public virtual ObjectResult<InsertarProveedor_Result> InsertarProveedor(string iP, string np, string ap, string emp, string cor, string tel, string dir, Nullable<byte> iT)
        {
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var npParameter = np != null ?
                new ObjectParameter("Np", np) :
                new ObjectParameter("Np", typeof(string));
    
            var apParameter = ap != null ?
                new ObjectParameter("Ap", ap) :
                new ObjectParameter("Ap", typeof(string));
    
            var empParameter = emp != null ?
                new ObjectParameter("Emp", emp) :
                new ObjectParameter("Emp", typeof(string));
    
            var corParameter = cor != null ?
                new ObjectParameter("Cor", cor) :
                new ObjectParameter("Cor", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var dirParameter = dir != null ?
                new ObjectParameter("Dir", dir) :
                new ObjectParameter("Dir", typeof(string));
    
            var iTParameter = iT.HasValue ?
                new ObjectParameter("IT", iT) :
                new ObjectParameter("IT", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertarProveedor_Result>("InsertarProveedor", iPParameter, npParameter, apParameter, empParameter, corParameter, telParameter, dirParameter, iTParameter);
        }
    
        public virtual ObjectResult<InsertarReparacion_Result> InsertarReparacion(string iDC, Nullable<System.DateTime> fECHAFIN)
        {
            var iDCParameter = iDC != null ?
                new ObjectParameter("IDC", iDC) :
                new ObjectParameter("IDC", typeof(string));
    
            var fECHAFINParameter = fECHAFIN.HasValue ?
                new ObjectParameter("FECHAFIN", fECHAFIN) :
                new ObjectParameter("FECHAFIN", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertarReparacion_Result>("InsertarReparacion", iDCParameter, fECHAFINParameter);
        }
    
        public virtual int InsertarSustituto(string iP, string iS)
        {
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var iSParameter = iS != null ?
                new ObjectParameter("IS", iS) :
                new ObjectParameter("IS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarSustituto", iPParameter, iSParameter);
        }
    
        public virtual ObjectResult<InsertarVehiculo_Result> InsertarVehiculo(string nombres, string anios)
        {
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var aniosParameter = anios != null ?
                new ObjectParameter("Anios", anios) :
                new ObjectParameter("Anios", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertarVehiculo_Result>("InsertarVehiculo", nombresParameter, aniosParameter);
        }
    
        public virtual int InsertarVenta(string rUC, Nullable<System.DateTime> fechaEntrega)
        {
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            var fechaEntregaParameter = fechaEntrega.HasValue ?
                new ObjectParameter("FechaEntrega", fechaEntrega) :
                new ObjectParameter("FechaEntrega", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarVenta", rUCParameter, fechaEntregaParameter);
        }
    
        public virtual ObjectResult<ListarCliente_Result> ListarCliente()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarCliente_Result>("ListarCliente");
        }
    
        public virtual ObjectResult<ListarCompras_Result> ListarCompras()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarCompras_Result>("ListarCompras");
        }
    
        public virtual ObjectResult<ListarDetalle_venta_Result> ListarDetalle_venta()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarDetalle_venta_Result>("ListarDetalle_venta");
        }
    
        public virtual ObjectResult<ListarPiezas_Result> ListarPiezas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarPiezas_Result>("ListarPiezas");
        }
    
        public virtual ObjectResult<ListarPiezas_Susitutias_Result> ListarPiezas_Susitutias(string iDPB)
        {
            var iDPBParameter = iDPB != null ?
                new ObjectParameter("IDPB", iDPB) :
                new ObjectParameter("IDPB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarPiezas_Susitutias_Result>("ListarPiezas_Susitutias", iDPBParameter);
        }
    
        public virtual ObjectResult<ListarReparacion_Result> ListarReparacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarReparacion_Result>("ListarReparacion");
        }
    
        public virtual ObjectResult<ListarVehiculos_Result> ListarVehiculos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarVehiculos_Result>("ListarVehiculos");
        }
    
        public virtual ObjectResult<ListarVenta_Result> ListarVenta()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarVenta_Result>("ListarVenta");
        }
    
        public virtual ObjectResult<ObtenerDetCompra_Result> ObtenerDetCompra(string iDC)
        {
            var iDCParameter = iDC != null ?
                new ObjectParameter("IDC", iDC) :
                new ObjectParameter("IDC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerDetCompra_Result>("ObtenerDetCompra", iDCParameter);
        }
    
        public virtual ObjectResult<ObtenerDetVentas_Result> ObtenerDetVentas(string iDV)
        {
            var iDVParameter = iDV != null ?
                new ObjectParameter("IDV", iDV) :
                new ObjectParameter("IDV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerDetVentas_Result>("ObtenerDetVentas", iDVParameter);
        }
    
        public virtual int ListarDetDevCompra_DevCompra(Nullable<int> iD_DevCompra)
        {
            var iD_DevCompraParameter = iD_DevCompra.HasValue ?
                new ObjectParameter("ID_DevCompra", iD_DevCompra) :
                new ObjectParameter("ID_DevCompra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ListarDetDevCompra_DevCompra", iD_DevCompraParameter);
        }
    }
}
